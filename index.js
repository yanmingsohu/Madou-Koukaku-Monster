const colors = require("colors");

const data = {
  // book 01
  '双头兽': ['黑恶犬', '黑恶犬'],
  '高级哥布林': ['哥布林', '哥布林'],
  '哥布林战士': ['哥布林', '兽人'],
  '兽人魔法师': ['兽人', '哥布林'],
  '死魂灵': ['吸魂灵', '食尸鬼'],
  '鸟精灵': ['风精灵', '黑猫娘'],
  
  // book 02
  '水精灵温蒂': ['水精灵蒂娜', '水精灵蒂娜'],
  '牛头人': ['狼人', '双头兽'],
  '连锁的骸骨': ['骷髅战士', '食尸鬼'],
  '光精灵': ['小光精灵', '树精灵'],
  '舒奇': ['鸟精灵', '连锁的骸骨'],
  '天使': ['光精灵', '舒奇'],
  '奇美拉': ['双头兽', '牛头人'],
  '巨岩怪': ['石头龙', '泥浆怪'],
  
  // book 03
  '触手鳄鱼兽': ['双头兽', '黑恶犬'],
  '兽人指挥官': ['兽人魔法师', '兽人'],
  '冰精灵': ['水精灵蒂娜', '地精灵'],
  '高级风精灵': ['风精灵', '鸟精灵'],
  '高级鸟精灵': ['鸟精灵', '高级风精灵'],
  '食肉泥浆怪': ['泥浆怪', '泥浆怪'],
  '水流泥浆怪': ['食肉泥浆怪', '水精灵蒂娜'],
  '地精灵战士': ['地精灵', '食肉泥浆怪'],
  
  // book 04
  '高级树精灵': ['树精灵', '地精灵'],
  '高级火狗': ['火焰狗', '小火精灵'],
  '深红祝福猫娘': ['黑喵娘', '哥布林战士'],
  '高级哥布林战士': ['哥布林战士', '兽人指挥官'],
  '石像鬼': ['低级石像鬼', '石头龙'],
  '灼热石头龙': ['石头龙', '石头龙'],
  '强化食尸鬼': ['食尸鬼', '食尸鬼'],
  '骸骨战士': ['连锁的骸骨', '强化食尸鬼'],
  
  // book 05
  '骷髅龙': ['灼热石头龙', '骸骨战士'],
  '战士的死魂灵': ['死魂灵', '骸骨战士'],
  '大天使': ['天使', '莉扎蜜舒'],
  '莉扎蜜舒': ['舒奇', '天使'],
  '萨奇巴斯': ['舒奇', '战士的死魂灵'],
  '蛇精': ['拉米亚', '萨奇巴斯'],
  '高级刺骨兽': ['刺骨兽', '刺骨兽'],
  '黑化骷髅龙': ['骷髅龙', '高级刺骨兽'],
  
  // book 06
  '哥布林指挥官': ['高级哥布林', '高级哥布林'],
  '兽人大将军': ['兽人指挥官', '兽人指挥官'],
  '高级地精灵': ['地精灵战士', '高阶泥浆怪'],
  '高阶泥浆怪': ['水流泥浆怪', '食肉泥浆怪'],
  '疯狂石头龙': ['灼热石头龙', '高阶泥浆怪'],
  '虚无的骸骨': ['光精灵', '战士的死魂灵'],
  '雷岩怪': ['巨岩怪', '强酸泥浆怪'],
  '烈焰巨岩怪': ['火岩怪', '巨岩怪'],
  
  // book 07
  '水精灵塞壬': ['水精灵温蒂', '高级风精灵'],
  '高级光精灵': ['光精灵', '高级树精灵'],
  '终极树精灵': ['树精灵', '高级光精灵'],
  '终极风精灵': ['高级风精灵', '高级鸟精灵'],
  '终极鸟精灵': ['高级鸟精灵', '终极风精灵'],
  '火精灵': ['火焰狗', '天使'],
  '火鸟': ['高级火狗', '火精灵'],
  '高级冰精灵': ['冰精灵', '地精灵战士'],
  
  // book 08
  '高级牛头人': ['狼人', '奇美拉'],
  '高级猫娘': ['傲娇猫娘', '黑喵娘'],
  '高级石化鸡': ['石化鸡', '刺骨兽'],
  '白蛇精': ['灰蛇精', '灰蛇精'],
  '高级狮鹫': ['狮鹫', '白蛇精'],
  '终极刺骨兽': ['白蛇精', '高级石化鸡'],
  '强化石像鬼': ['石像鬼', '灼热石头龙'],
  '猫娘': ['终极树精灵', '深红祝福猫娘'],
  
  // book 09
  '终极食尸鬼': ['强化食尸鬼', '强化食尸鬼'],
  '斩心脏的剑': ['慿魅灵', '战士的死魂灵'],
  '仇恨的地震剑': ['斩心脏的剑', '大地巨岩怪'],
  '凌恋的雅女': ['慿魅灵', '斩心脏的剑'],
  '黑甲将军': ['骸骨战士', '骸骨战士'],
  '泰基鲁': ['古拉基鲁', '光精灵'],
  '马滋那鲁': ['泰基鲁', '高级光精灵'],
  '小天使': ['水精灵塞壬', '泰基鲁'],
  
  // book 10
  '哥布林大将军': ['哥布林指挥官', '哥布林指挥官'],
  '兽人骑士': ['兽人指挥官', '哥布林指挥官'],
  '终极天使': ['小天使', '终极风精灵'],
  '莉莉安': ['莉扎蜜舒', '大天使'],
  '灼热奇美拉': ['奇美拉', '火鸟'],
  '嗜血石头龙': ['疯狂石头龙', '黑化骷髅龙'],
  '终极猫娘': ['高级猫娘', '猫娘'],
  '兽人大法师': ['哥布林大将军', '高级地精灵'],
  
  // book 11
  '黑蛇精': ['白蛇精', '白蛇精'],
  '终极石化鸡': ['高级石化鸡', '终极刺骨兽'],
  '罪人的死魂灵': ['死魂灵', '战士的死魂灵'],
  '高级蛇精': ['蛇精', '莉莉安'],
  '红恶魔男爵': ['强化石像鬼', '终极食尸鬼'],
  '巴蒂斯奇美拉': ['灼热奇美拉', '高阶泥浆怪'],
  '莉莉丝': ['罪人的死魂灵', '终极猫娘'],
  '凌恋的灵姬': ['终极天使', '莉莉丝'],
  
  // book 12
  '高级乌龟兽': ['乌龟', '牛头人'],
  '终极乌龟': ['高级乌龟兽', '狮头人'],
  '绿恶魔男爵': ['红恶魔男爵', '疯狂石头龙'],
  '蓝恶魔男爵': ['绿恶魔男爵', '嗜血石头龙'],
  '金甲将军': ['黑金将军', '虚无的骸骨'],
  '魔神将军': ['金甲将军', '罪人的死魂灵'],
  '终极水精灵': ['猫娘', '小天使'],
  '高级火精灵': ['火鸟', '终极鸟精灵'],
  
  // book 13
  '终极冰精灵': ['高级冰精灵', '高级地精灵'],
  '终极奇美拉': ['巴蒂斯奇美拉', '巴蒂斯奇美拉'],
  '狮头人': ['高级牛头人', '高级猫娘'],
  '狩猎灵魂的魔剑': ['斩心脏的剑', '高阶泥浆怪'],
  '雷龙': ['迅雷龙', '仇恨的电击剑'],
  '萨麦鲁': ['泰基鲁', '莉莉安'],
  '三头兽': ['终极猫娘', '黑蛇精'],
  '终极狮鹫': ['巴蒂斯奇美拉', '蓝恶魔男爵'],
  
  // book E1
  '贝尔恶魔': ['红恶魔男爵', '哥布林大将军'],
  '克恶魔': ['贝尔恶魔', '兽人大法师'],
  '劳马卡尔': ['莉莉丝', '萨麦鲁'],
  '拉吉卡尔': ['劳马卡尔', '蓝恶魔男爵'],
  '拉吉米尔': ['拉吉卡尔', '凌恋的灵姬'],
  '普罗阿': ['劳马卡尔', '高级蛇精'],
  '普罗瓦': ['拉吉卡尔', '终极乌龟'],
  '海鲁格.普罗阿': ['普罗阿', '拉吉米尔'],
  
  // other
  '泡油泥浆怪': ['食肉泥浆怪', '小火精灵'],
  '强酸泥浆怪': ['食肉泥浆怪', '风精灵'],
  '火岩怪': ['巨岩怪', '泡油泥浆怪'],
  '土岩怪': ['巨岩怪', '食肉泥浆怪'],
  '冰岩怪': ['巨岩怪', '水流泥浆怪'],
  '大地巨岩怪': ['土岩怪', '巨岩怪'],
  '冰河巨岩怪': ['冰岩怪', '巨岩怪'],
  '雷霆巨岩怪': ['雷岩怪', '巨岩怪'],
  '仇恨的电击剑': ['斩心脏的剑', '雷霆巨岩怪'],
  '仇恨的火炎剑': ['斩心脏的剑', '烈焰巨岩怪'],
  '仇恨的结冰剑': ['斩心脏的剑', '冰河巨岩怪'], 
  '食尸鬼': ['吸魂灵', '吸魂灵'],
  '吉塞拉.普罗阿': ['普罗瓦', '海鲁格.普罗阿'],
  '地龙': ['岩龙', '仇恨的地震剑'],
  '火龙': ['火焰龙', '仇恨的火炎剑'],
  '水龙': ['海龙', '仇恨的结冰剑'],
};

const shop = new Set([
  '骷髅龙', '巨岩怪', '疯狂石头龙', '慿魅灵', '斩心脏的剑', '石头龙',
  '食尸鬼', '吸魂灵', '死魂灵', '红恶魔男爵', '骷髅战士', '骸骨战士',
  '古拉基鲁', '低级石像鬼', '舒奇', '乌龟', '天使', '小天使', '灰蛇精',
  '狮鹫', '刺骨兽', '奇美拉', '石化鸡', '狼人', '拉米亚', '鸟精灵',
  '黑恶犬', '黑喵娘', '猫娘', '傲娇猫娘', '高级风精灵', '小光精灵',
  '光精灵', '火焰狗', '火鸟', '风精灵', '高阶泥浆怪', '水精灵蒂娜',
  '小火精灵', '树精灵', '泥浆怪', '食肉泥浆怪', '兽人', '兽人指挥官',
  '地精灵', '哥布林', '哥布林指挥官', '瓦莉露芙',
]);

const {index, len} = makeIndex();

if (!process.argv[2]) {
  help();
  return;
}

const name = index[process.argv[2]] || process.argv[2];

if (!data[name]) {
  console.log("Cannot found: ".red, name, '\n');
  help();
  return;
}

let total = {
  colorList : [],
  _i : 7,
  t: {},
  colorMap: {},
  _p : {},
    
  add(name) {
    if (!this.t[name]) {
      this.t[name] = 1;
    } else {
      this.t[name] += 1;
    }
  },

  isPrinted(name) {
    if (!this._p[name]) {
      this._p[name] = true;
      return false;
    }
    return true;
  },

  color(name) {
    let c = this.colorMap[name];
    if (!c) {
      c = this.colorMap[name] = this.nextColor();
    }
    return colors[c](name);// + c;
  },

  nextColor() {
    let i = this._i++;
    if (this._i >= this.colorList.length) {
      this._i = 0;
    }
    return this.colorList[i];
  },
};

const notUse = new Set([
  'whiteBG', 'black', 'bgWhite', 'bgBrightWhite', 'bgBrightYellow',
]);

for (let n in colors.styles) {
  if (!notUse.has(n))
    total.colorList.push(n);
}


console.log( hc(name, 0, total) );
for (let n in total.t) {
  console.log(shop.has(n) ? "* ":'  ', total.color(n), total.t[n]);
}
  
  
function makeIndex() {
  const index = {};
  let i = 1;  
  let len = 0;
  for (let n in data) {
    index[i++] = n;
    len = Math.max(len, n.length);
  }
  len = len *2 +3;
  return {index, len};
}


function hc(name, s, t) {
  let ref = data[name];
  if (ref) {
    let a = ref[0];
    let b = ref[1];
    t.add(a);
    t.add(b);
    
    let buf = [];
    space(buf, s);
    
    s += charsize(name) + 3;
    let ra = hc(a, s, t);
    let rb = hc(b, s += 3 + charsize(a), t);
    
    if (t.isPrinted(name)) {
      return '';
    }
    buf.push(t.color(name), ' = ', t.color(a), ' + ', t.color(b), '\n', ra, rb);
    return buf.join('');
  }
  return '';
}


function help() {
  console.log("Command Line: node index [名字/索引]\n");
  printList();
}


function printList() {
  let buf = [];
  let i = 0;
  for (let n in index) {
    i += space(buf, 4 - charsize(n));
    buf.push(n.underline, ' ');
    
    buf.push(index[n])
    i += space(buf, len - charsize(index[n]));
    
    i += 4 + len;
    if (i >= process.stdout.columns) {
      buf.push('\n');
      i = 0;
    } 
  }
  console.log(buf.join(''));
}


function space(buf, count) {
  for (let sp = 0; sp < count; ++sp) {
    buf.push(' ');
  }
  return count;
}


function charsize(s) {
  let l = 0;
  for (let i=0; i<s.length; ++i) {
    if (s.charCodeAt(i) > 127) {
      l += 2;
    } else {
      l++;
    }
  }
  return l;
}